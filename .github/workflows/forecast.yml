name: Forecast

on:
  workflow_call:
    inputs:
      post_id:
        description: 'Metaculus post id to forecast:'
        required: true
        type: string
    secrets:
      ANTHROPIC_API_KEY:
        required: true
      ASKNEWS_API_KEY:
        required: true
      DEEPSEEK_API_KEY:
        required: true
      METACULUS_BOT_API_TOKEN:
        required: true
      METACULUS_BOT_ID:
        required: true
      PERPLEXITY_API_KEY:
        required: true
  workflow_dispatch:
    inputs:
      post_id:
        description: 'Metaculus post id to forecast:'
        required: true
        type: string

# prevent parallel runs
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  news:
    if: ${{ inputs.post_id }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/outputs/news.md
          path: tmp/${{ inputs.post_id }}/outputs/news.md
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: ./research.rb ${{ inputs.post_id }}
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ASKNEWS_API_KEY: ${{ secrets.ASKNEWS_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          METACULUS_BOT_API_TOKEN: ${{ secrets.METACULUS_BOT_API_TOKEN }}
          METACULUS_BOT_ID: ${{ secrets.METACULUS_BOT_ID }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      - uses: actions/cache/save@v4
        with:
          key:  tmp/${{ inputs.post_id }}/outputs/news.md
          path: tmp/${{ inputs.post_id }}/outputs/news.md
      - run: |
          echo '<details><summary>Filters</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/news_filters.json)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
      - run: |
          echo '<details><summary>Result</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/outputs/news.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY

  research:
    needs: news
    if: ${{ inputs.post_id }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/research.json
          path: tmp/${{ inputs.post_id }}/research.json
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: ./research.rb ${{ inputs.post_id }}
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          METACULUS_BOT_API_TOKEN: ${{ secrets.METACULUS_BOT_API_TOKEN }}
          METACULUS_BOT_ID: ${{ secrets.METACULUS_BOT_ID }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      - uses: actions/cache/save@v4
        with:
          key:  tmp/${{ inputs.post_id }}/research.json
          path: tmp/${{ inputs.post_id }}/research.json
      - run: |
          echo "# $(cat tmp/${{ inputs.post_id }}/post.json | jq -r '.title')" >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/post.json | jq -r '.question.description')" >> $GITHUB_STEP_SUMMARY
      - run: |
          echo '<details><summary>Prompt</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/inputs/research.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
      - run: |
          echo '<details><summary>Result</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/outputs/research.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY

  forecast:
    needs: research
    if: ${{ inputs.post_id }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        forecaster_index: [0, 1, 2]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/research.json
          path: tmp/${{ inputs.post_id }}/research.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.${{ matrix.forecaster_index }}.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.${{ matrix.forecaster_index }}.json
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: ./forecast.rb ${{ inputs.post_id }} ${{ matrix.forecaster_index }}
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          METACULUS_BOT_API_TOKEN: ${{ secrets.METACULUS_BOT_API_TOKEN }}
          METACULUS_BOT_ID: ${{ secrets.METACULUS_BOT_ID }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      - uses: actions/cache/save@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.${{ matrix.forecaster_index }}.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.${{ matrix.forecaster_index }}.json
      - run: |
          ./forecast_result.rb ${{ inputs.post_id }} ${{ matrix.forecaster_index }} forecast >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
      - run: |
          echo '<details><summary>Prompt</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/inputs/forecast.${{ matrix.forecaster_index }}.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
      - run: |
          echo '<details><summary>Result</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/outputs/forecast.${{ matrix.forecaster_index }}.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY

  revise_forecast:
    needs: forecast
    if: ${{ inputs.post_id }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        forecaster_index: [0, 1, 2]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/research.json
          path: tmp/${{ inputs.post_id }}/research.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.0.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.0.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.1.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.1.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.2.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.2.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.3.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.3.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.4.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.4.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/forecast.5.json
          path: tmp/${{ inputs.post_id }}/forecasts/forecast.5.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.${{ matrix.forecaster_index }}.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.${{ matrix.forecaster_index }}.json
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: ./revise_forecast.rb ${{ inputs.post_id }} ${{ matrix.forecaster_index }}
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          METACULUS_BOT_API_TOKEN: ${{ secrets.METACULUS_BOT_API_TOKEN }}
          METACULUS_BOT_ID: ${{ secrets.METACULUS_BOT_ID }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      - uses: actions/cache/save@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.${{ matrix.forecaster_index }}.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.${{ matrix.forecaster_index }}.json
      - run: |
          ./forecast_result.rb ${{ inputs.post_id }} ${{ matrix.forecaster_index }} revision >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
      - run: |
          echo '<details><summary>Prompt</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/inputs/revision.${{ matrix.forecaster_index }}.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
      - run: |
          echo '<details><summary>Result</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/outputs/revision.${{ matrix.forecaster_index }}.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY

  consensus:
    needs: revise_forecast
    if: ${{ inputs.post_id }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/research.json
          path: tmp/${{ inputs.post_id }}/research.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.0.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.0.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.1.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.1.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.2.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.2.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.3.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.3.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.4.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.4.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/revision.5.json
          path: tmp/${{ inputs.post_id }}/forecasts/revision.5.json
      - uses: actions/cache/restore@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/consensus.json
          path: tmp/${{ inputs.post_id }}/forecasts/consensus.json
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: ./consensus.rb ${{ inputs.post_id }}
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          METACULUS_BOT_API_TOKEN: ${{ secrets.METACULUS_BOT_API_TOKEN }}
          METACULUS_BOT_ID: ${{ secrets.METACULUS_BOT_ID }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      - uses: actions/cache/save@v4
        with:
          key:  tmp/${{ inputs.post_id }}/forecasts/consensus.json
          path: tmp/${{ inputs.post_id }}/forecasts/consensus.json
      - run: |
          echo "$(cat tmp/${{ inputs.post_id }}/consensus/forecast.json | jq -r '.[] | .continuous_cdf // .probability_yes // .probability_yes_per_category')" >> $GITHUB_STEP_SUMMARY
      - run: |
          echo '<details><summary>Prompt</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/inputs/consensus.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
      - run: |
          echo '<details><summary>Result</summary>' >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/outputs/consensus.md)" >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
      - run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "$(cat tmp/${{ inputs.post_id }}/consensus/comment.json | jq -r '.text')" >> $GITHUB_STEP_SUMMARY
